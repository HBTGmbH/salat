package org.tb.bdom;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.*;
import org.tb.GlobalConstants;

import javax.persistence.Entity;
import javax.persistence.*;
import java.io.Serializable;
import java.text.SimpleDateFormat;

/**
 * Bean for table 'timereport'.
 *
 * @author oda
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class Timereport extends EditDetails implements Serializable {

    private static final long serialVersionUID = 1L; // 1L;

    /**
     * Autogenerated technical object id.
     */
    @Id
    @GeneratedValue
    private long id;

    /**
     * Referenceday
     */
    @ManyToOne
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "REFERENCEDAY_ID")
    @Cascade(value = {CascadeType.SAVE_UPDATE})
    private Referenceday referenceday;

    /**
     * Employeecontract
     */
    @ManyToOne
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "EMPLOYEECONTRACT_ID")
    @Cascade(value = {CascadeType.SAVE_UPDATE})
    private Employeecontract employeecontract;

    /**
     * Suborder
     */
    @ManyToOne
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "SUBORDER_ID")
    @Cascade(value = {CascadeType.SAVE_UPDATE})
    private Suborder suborder;

    /**
     * Employeeorder
     */
    @ManyToOne
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "EMPLOYEEORDER_ID")
    @Cascade(value = {CascadeType.SAVE_UPDATE})
    private Employeeorder employeeorder;

    /**
     * Ticket
     */
    @ManyToOne
    @Fetch(FetchMode.SELECT)
    @JoinColumn(name = "TICKET_ID")
    @Cascade(value = {CascadeType.SAVE_UPDATE})
    private Ticket ticket;

    /**
     * Duration
     */
    private Integer durationhours;
    private Integer durationminutes;

    /**
     * Sort of Report
     */
    private String sortofreport;

    /**
     * Task Description
     */
    private String taskdescription;

    /**
     * Status
     */
    private String status;

    /**
     * Costs
     */
    private Double costs;

    /**
     * Training
     */
    private Boolean training;

    /**
     * Sequencial number
     */
    private int sequencenumber;

    /**
     * Date of Release
     */
    private java.util.Date released;

    /**
     * Sign of the releasing person
     */
    private String releasedby;

    /**
     * Date of Acceptance
     */
    private java.util.Date accepted;

    /**
     * Sign of the accepting person
     */
    private String acceptedby;

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public Employeecontract getEmployeecontract() {
        return employeecontract;
    }

    public void setEmployeecontract(Employeecontract employeecontract) {
        this.employeecontract = employeecontract;
    }

    public Employeeorder getEmployeeorder() {
        return employeeorder;
    }

    public void setEmployeeorder(Employeeorder employeeorder) {
        this.employeeorder = employeeorder;
    }

    public Ticket getTicket() {
        return ticket;
    }

    public void setTicket(Ticket ticket) {
        this.ticket = ticket;
    }

    public Integer getDurationhours() {
        return durationhours;
    }

    public void setDurationhours(Integer durationhours) {
        this.durationhours = durationhours;
    }

    public Integer getDurationminutes() {
        return durationminutes;
    }

    public void setDurationminutes(Integer durationminutes) {
        this.durationminutes = durationminutes;
    }

    public String getSortofreport() {
        return sortofreport;
    }

    public void setSortofreport(String sortofreport) {
        this.sortofreport = sortofreport;
    }

    public Referenceday getReferenceday() {
        return referenceday;
    }

    public void setReferenceday(Referenceday referenceday) {
        this.referenceday = referenceday;
    }

    public Suborder getSuborder() {
        return suborder;
    }

    public void setSuborder(Suborder order) {
        this.suborder = order;
    }

    public String getTaskdescription() {
        return taskdescription;
    }

    public void setTaskdescription(String taskdescription) {
        this.taskdescription = taskdescription;
    }

    public Double getCosts() {
        return costs;
    }

    public void setCosts(Double costs) {
        this.costs = costs;
    }

    public Boolean getTraining() {
        return training;
    }

    public void setTraining(Boolean training) {
        this.training = training;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * @return the sequencenumber
     */
    public int getSequencenumber() {
        return sequencenumber;
    }

    /**
     * @param sequencenumber the sequencenumber to set
     */
    public void setSequencenumber(int sequencenumber) {
        this.sequencenumber = sequencenumber;
    }

    public java.util.Date getAccepted() {
        return accepted;
    }

    public void setAccepted(java.util.Date accepted) {
        this.accepted = accepted;
    }

    public String getAcceptedby() {
        return acceptedby;
    }

    public void setAcceptedby(String acceptedby) {
        this.acceptedby = acceptedby;
    }

    public java.util.Date getReleased() {
        return released;
    }

    public void setReleased(java.util.Date released) {
        this.released = released;
    }

    public String getReleasedby() {
        return releasedby;
    }

    public void setReleasedby(String releasedby) {
        this.releasedby = releasedby;
    }

    public Timereport getTwin() {
        Timereport timereport = new Timereport();
        timereport.setCosts(costs);
        timereport.setDurationhours(durationhours);
        timereport.setDurationminutes(durationminutes);
        timereport.setEmployeecontract(employeecontract);
        timereport.setSortofreport(sortofreport);
        timereport.setStatus(status);
        timereport.setSuborder(suborder);
        timereport.setTaskdescription(taskdescription);
        timereport.setTraining(training);
        timereport.setSequencenumber(0);
        timereport.setEmployeeorder(employeeorder);

        return timereport;
    }

    public boolean getFitsToContract() {
        return !referenceday.getRefdate().before(employeecontract.getValidFrom()) && (employeecontract.getValidUntil() == null || !referenceday.getRefdate().after(employeecontract.getValidUntil()));
    }

    public String getTimeReportAsString() {
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(GlobalConstants.DEFAULT_DATE_FORMAT);
        return "TR[" + getEmployeecontract().getEmployee().getSign() + " | "
                + simpleDateFormat.format(getReferenceday().getRefdate()) + " | "
                + getSuborder().getCustomerorder().getSign() + " / "
                + getSuborder().getSign() + " | " + getDurationhours() + ":"
                + getDurationminutes() + " | " + getTaskdescription() + "]";
    }

}
