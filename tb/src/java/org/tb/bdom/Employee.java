package org.tb.bdom;

import java.io.Serializable;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

/**
 * Bean for table 'Employee'.
 * 
 * @author oda
 */
@Entity
public class Employee implements Serializable {

	private static final long serialVersionUID = 1L;

	/**
	 * Autogenerated technical object id.
	 */	
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE)
	private long id;

	/** registration first and last name of the employee */
	private String loginname;

	/** registration password of the employee */
	private String password;
	
	/** first name of the employee */
	private String firstname;
	
	/** last name of the employee */
	private String lastname;
	
	/** sign of the employee (2 or 3 letters) */
	private String sign;
	
	/** gender of the employee */
	private char gender;
	
	/** status of the employee (e.g., admin, ma, bl */
	private String status;
	
	
	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getLoginname() {
		return loginname;
	}

	public void setLoginname(String loginname) {
		this.loginname = loginname;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	
	public String getFirstname() {
		return firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	public char getGender() {
		return gender;
	}

	public void setGender(char gender) {
		this.gender = gender;
	}

	public String getLastname() {
		return lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	public String getSign() {
		return sign;
	}

	public void setSign(String sign) {
		this.sign = sign;
	}
	
	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}
	
	public String getName() {
		return (this.firstname + " " + this.lastname);
	}

	@Override
	public boolean equals(Object obj) {
		if (obj instanceof Employee) {
			Employee other = (Employee) obj;
			return other.sign.equals(sign);
		}
		return false;
	}

	@Override
	public int hashCode() {
		return sign.hashCode();
	}

}
