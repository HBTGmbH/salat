package org.tb.bdom;

import java.io.Serializable;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * Bean for table 'referenceday'
 * 
 * @author oda
 */
@Entity
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
public class Referenceday implements Serializable {

	private static final long serialVersionUID = 1L; // 1L;

	/**
	 * Autogenerated technical object id.
	 */	
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE)
	private long id;

	
	/** list of timereports, associated to this refday */
	@OneToMany
	@Cascade(value = { CascadeType.SAVE_UPDATE })
	@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
	private List<Timereport> timereports;

	/** Date */
	private java.sql.Date refdate;
	
	/** working day y/n */
	private Boolean workingday;
	
	/** Day of week */
	private String dow;

	/** Public Holiday y/n */
	private Boolean holiday;
	
	/** name */
	private String name;
	

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}
	
	public java.sql.Date getRefdate() {
		return refdate;
	}

	public void setRefdate(java.sql.Date refdate) {
		this.refdate = refdate;
	}

	public Boolean getWorkingday() {
		return workingday;
	}

	public void setWorkingday(Boolean isWorkingday) {
		this.workingday = isWorkingday;
	}
	
	public Boolean getHoliday() {
		return holiday;
	}

	public void setHoliday(Boolean holiday) {
		this.holiday = holiday;
	}

	public String getDow() {
        Map<String, String> weekDaysMap = new HashMap<String, String>();
        weekDaysMap.put("Mon", "main.matrixoverview.weekdays.monday.text");
        weekDaysMap.put("Tue", "main.matrixoverview.weekdays.tuesday.text");
        weekDaysMap.put("Wed", "main.matrixoverview.weekdays.wednesday.text");
        weekDaysMap.put("Thu", "main.matrixoverview.weekdays.thursday.text");
        weekDaysMap.put("Fri", "main.matrixoverview.weekdays.friday.text");
        weekDaysMap.put("Sat", "main.matrixoverview.weekdays.saturday.text");
        weekDaysMap.put("Sun", "main.matrixoverview.weekdays.sunday.text");
        return weekDaysMap.get(dow);
	}
    
	public void setDow(String dow) {
		this.dow = dow;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public List<Timereport> getTimereports() {
		return timereports;
	}

	public void setTimereports(List<Timereport> timereports) {
		this.timereports = timereports;
	}

	
	@Override
	public boolean equals(Object obj) {
		if (obj instanceof Referenceday) {
			Referenceday other = (Referenceday) obj;
			return other.refdate.equals(refdate);
		}
		return false;
	}

	@Override
	public int hashCode() {
		return refdate.hashCode();
	}

}
