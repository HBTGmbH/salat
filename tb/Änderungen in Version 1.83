Änderungen Fortbildung:

- New training variable for project bookings + filter in showdailyreports:

	Change of databank scheme:
	ALTER TABLE TIMEREPORT ADD TRAINING BOOLEAN;
	UPDATE TIMEREPORT SET TRAINING = FALSE;
	
	changes in tb: 
	java org.tb.web.form.AddDailyReportForm.
	org.tb.web.form.UpdateDailyRecordForm.java
	org.tb.web.form.ShowDailyRecordForm.java
	org.tb.bdom.Timereport.java
	/tb/src/java/org/tb/web/action/UpdateDailyReportAction.java
	/tb/src/java/org/tb/web/action/EditDailyReportAction.java
	/tb/src/java/org/tb/web/action/StoreDailyReportAction.java
	/tb/src/java/org/tb/web/action/ShowDailyReportAction.java
	/tb/src/web/addDailyReport.jsp
	/tb/src/web/showDailyReport.jsp
	/tb/src/web/showDailyReportPrint.jsp
	/tb/src/web/WEB-INF/tb_sql.txt 
	MessageResources( /_de/_en)
	
	--> new variable training + getters & setters where needed; 
	wrote training into forms and request where needed;
	added checkbox for new bookings and editing if booking is project-based training;
	added checkbox in daily reports for filtering for project-based training; 
	Script for Change of databank scheme (see above);
	added new text properties in RessourceBundle
	
	Testfälle für Änderungen am SALAT – Buchung als Fortbildung markieren
		1.)	Neue Buchung - CreateDailyReport
			a.	Als Fortbildung markiert
			-	wird in ShowDailyReport-Seite korrekt mit markierter Checkbox angezeigt
			-	wird korrekt in Datenbank mit true für training gespeichert: 
			INSERT INTO TIMEREPORT VALUES(120493,120340,7150,3,0,0,0.0E0,'NeuMitFB',[…],TRUE)
			b.	Nicht als Fortbildung markiert
			-	wird in ShowDailyReport-Seite korrekt mit unmarkierter Checkbox angezeigt
			-	wird korrekt in Datenbank mit false für training gespeichert: 
			INSERT INTO TIMEREPORT VALUES(120492,120340,7150,2,0,0,0.0E0,'NeuOhneFB',[...],FALSE)
		2.)	bestehende Buchung editieren
			a.	im ShowDailyReport-Fenster
				i.	nicht markierte markieren
				o	wird auch nach speichern korrekt mit markierter Checkbox im selben Fenster angezeigt 
				o	wird korrekt in Datenbank mit true für training gespeichert:  
				INSERT INTO TIMEREPORT VALUES(120494,120340,102275,4,0,0,0.0E0,'ChangeMitFB',[…],TRUE)
				ii.	bestehende Markierung entfernen
				o	wird auch nach speichern korrekt mit unmarkierter Checkbox im selben Fenster angezeigt 
				o	wird korrekt in Datenbank mit false für training gespeichert: 
				INSERT INTO TIMEREPORT VALUES(120495,120340,102275,5,0,0,0.0E0,'ChangeOhneFB',[],FALSE)
			b.	im EditDailyReport-Fenster
				i.	nicht markierte markieren
				o	wird nach speichern korrekt im ShowDailyReport-Fenster mit markierter Checkbox angezeigt
				o	wird nach speichern korrekt in DB mit true für training gespeichert:
				INSERT INTO TIMEREPORT VALUES(120496,120340,12760,6,0,0,0.0E0,'EditMitFB',[…],TRUE)
				o	
				ii.	bestehende Markierung entfernen 
				o	wird nach speichern korrekt im ShowDailyReport-Fenster mit unmarkierter Checkbox angezeigt
				o	wird nach speichern korrekt in DB mit false für training gespeichert
				INSERT INTO TIMEREPORT VALUES(120497,120340,102275,7,0,0,0.0E0,'EditOhneFB',[…],FALSE)
		Alle Varianten werden sowohl in der showDailyReport.jsp als auch in der addDailyReport.jsp korrekt angezeigt.
			


- new page for showing training over year:

	newly added:

	/tb/src/web/showTraining.jsp
	/tb/src/java/org/tb/web/form/ShowTrainingForm.java
	/tb/src/java/org/tb/web/action/ShowTrainingAction.java
	/tb/src/java/org/tb/persistence/TrainingDAO.java
	/tb/src/java/org/tb/bdom/TrainingOverview.java
	
	changes:
	path	/tb/src/web/menu.jsp
	path	/tb/src/web/WEB-INF/spring-beans-devl.xml
	path	/tb/src/web/WEB-INF/spring-beans.xml
	path	/tb/src/web/WEB-INF/struts-config.xml
	path	/tb/src/java/org/tb/util/DateUtils.java
	
	-> new page with everything needed to display yearly common training and project based training for every employeecontract,
	including form, jsp, action, dao, a new class for showing the needed data, mappings, appending in request and a new function 
	for a list of years since start of employeecontract
	
	test cases in browser:
	- login as admin
		- show trainings for single employeecontracts, different years
		- show trainings for alle employees, different years
	- login as normal employee
		- show trainings for single employeecontracts, different years
		- show trainings for alle employees, different years
	everything correctly shown.
	
--------------------------------------------------------------------------------------------------------------------------		

Änderungen Default-Flag Training:

New Variable trainingFlag in Suborder -> when creating a new suborder, can set this to true to set the training-flag on as a default for every booking on that suborder.

Change of database scheme:

ALTER TABLE SUBORDER ADD TRAININGFLAG BOOLEAN;
Update SUBORDER SET TRAININGFLAG = False;


Changes in tb:

org.tb.bdom.Suborder.java:
	added a new variable Boolean trainingFlag with getter and setter.
	
org.tb.bdom.SuborderViewDecorator.java:
	added wrapper-getter&setter for trainingFlag
	
org.tb.web.form.AddSuborderForm.java:
	added a new variable Boolean trainingFlag with getter and setter and default-value false (in reset).
	
addSuborder.jsp:
	added a checkbox for setting the new variable.
	
showSuborder.jsp:
	added a tr for the new variable in the info-mouseover-table 

org.tb.web.action.admin.StoreSuborderAction.java:
	l. 307: copy value of variable from form into suborder before saving.

org.tb.web.action.admin.EditSuborderAction.java:
	l. 89: set the value of the trainingFlag of the suborder to be edited into the form.
	
org.tb.web.action.StoreDailyReportAction.java:
	ll 368ff: added logic so that default-flag for training in suborder results in pre-checked training box in new timereport
	
	
Tests:
- Created new Suborder with Default-Flag on (as admin)
		 - new timereport (as sql): After choosing the new suborder, the training flag is automatically set on. On saving the timereport, training is saved as True.
		 	Flag can be manually set off-> Saving: training is saved as False. 
		 - Editing a timereport with this suborder: training flag can be manually set on and off as before, saving works as before.
- edit existing suborder: Default-Flag on
		 - test with new timereport / editing a timereport: as above
- editing existing suborder: Default-Tag switched from on to off
		- new timereport: training flag is not automatically set on, manually setting it on and off works as before.

---------------------------------------------------------------------------------------------------------------

Änderungen Bug Suborder Checkbox:

Beschreibung des Bugs: Problem mit Checkboxen vor Suborder, nach Ausführen der Dropdownmenü-Aktion nicht mehr abwählbar (Details siehe Mantis Ticket 0003374.

Änderungen ShowSuborder:

Links vor jedem Suborder gibt es eine Checkbox. Unten links ist ein Dropdownmenü, dessen Auswahlmöglichkeiten für alle über die Checkboxen 
ausgewählten Unteraufträge durchgeführt werden.
Es gibt nun eine neue Checkbox neben diesem Dropdownmenü unten links, mit dem man auswählen kann ob die Auswahl der Suborder nach 
Ausführen der Dropdown-Aktion beibehalten werden soll oder nicht. Default-Einstellung ist, dass die Markierung nicht beibehalten wird.

Außerdem wird dieses Dropdownmenü, die Checkbox daneben sowie die Checkboxen vor den Unteraufträgen für "normale" Mitarbeiter nicht mehr angezeigt.

Tests:

Eingeloggt mit adm:
- Verschiedene Suborders markiert, Checkbox für beibehalten nicht markiert:  nach Ausführen der Dropdownmenü-Aktion sind alle Checkboxen 
	(auch die für beibehalten) nicht mehr markiert.
- Verschiedene Suborders markiert, Checkbox für beibehalten markiert: nach Ausführen der Dropdownmenü-Aktion sind alle Checkboxen 
	(auch die für beibehalten) weiterhin markiert. 
	Anschließend einige der Suborder demarkiert, Checkbox für beibehalten markiert:nach Ausführen der Dropdownmenü-Aktion sind alle Checkboxen 
	(auch die für beibehalten) weiterhin markiert.
	Anschließend einige der Suborder demarkiert andere markiert, Checkbox für beibehalten demarkiert:nach Ausführen der Dropdownmenü-Aktion sind alle Checkboxen 
	(auch die für beibehalten) nicht markiert.
Eingeloggt mit pv: wie adm
Eingelogt mit ma: Gesamte Zeile mit Checkboxen vor Suborder nicht angezeigt, Dropdownmenü und Checkbox ebenfalls nicht angezeigt.
	
----------------------------------------------------------------------------------------------------------------

Änderungen Freigabefilter:

neuer Filter eingebaut: Die Abnehmer können nun über ein Dropdown-Menü ausgewählt werden.

Default-Einstellung: Wenn LoginEmployee Abnehmer ist, ist er selbst voreingestellt, 
wenn LoginEmployee kein Abnehmer aber authorized ist (BL, PV, adm), ist "ALLE" voreingestellt.
Wenn der LoginEmployee weder Abnehmer noch authorized ist, wird das Filtermenü gar nicht angezeigt, 
an dieser Ansicht der Seite wurde keine Änderung vorgenommen.

Wenn einer der Abnehmer im Filter-Dropdownmenü ausgewählt ist, werden nur seine Teammitglieder sowie er selbst in der Tabelle angezeigt.
Bei der Auswahl "ALLE" wird wie bisher die gesamte Tabelle über alle Mitarbeiter angezeigt.

Wenn ein Abnehmer der nicht PV,BL oder adm ist, einen anderen Abnehmer als sich selbst im Filter einstellt, bekommt er zwar dessen Teammitglieder 
und sich selbst in der Tabelle angezeit, er kann aber trotzdem nur seine eigenen Teammitglieder im Mitarbeiter-Dropdownmenü auswählen und abnehmen.



Tests:
- mit adm eingeloggt: alle möglichen Filtereinstellungen ausprobiert. Restliche Funktionalität unverändert (freigeben, abnehmen, reopen).
- mit normalem MA (weder Abnehmer noch authorized) eingeloggt: Filter nicht sichtbar, alle Anzeigen und die Freigabemöglichkeit unverändert
- mit PV (Test Test, selbst erstellt) eingeloggt: verschiedene Filtereinstellungen ausprobiert. Restliche Funktionalität unverändert.
- mit Abnehmer (sql, als supervisor zugeordnet zu den beiden Test-MA Test und Test2) eingeloggt: Voreinstellung funktioniert, nur die beiden zugeordneten MA werden in Tabelle angezeigt.
	andere Abnehmer können im Filter-Dropdownmenü eingestellt werden, deren Teammitglieder werden dann in Tabelle angezeigt. Abenommen werden können trotzdem nur die sql zugeordneten MA.
Generell: 	Default-Einstellung funktioniert (Anzeige im Droppdownmenü mit sign, in Tabelle Teammitglieder bzw. bei ALLE alle employeecontracts)
			Wechseln zwischen verschiedenen Auswahlen im Dropdown-Menü funktioniert inklulsive Update der Tabelle
			

			
Update 06.03.2013: in ShowReleaseAction ergänzt, das beim Aufrufen der Action überprüft wird ob schon ein Supervisor im Filter gesetzt wurde, 
wenn ja, dessen Mitarbeiter anzeigen sonst wie bisher

---------------------------------------------------------------------------------------------------------------------

Änderungen Überstundenausgleich:

Es muss im Live-System ein neuer Unterauftrag für den Auftrag URLAUB generiert werden! 
Dieser Unterauftrag muss allen Mitarbeitern zugeteilt werden!
Folgende Daten wurden im lokalen System verwendet:

Übergeordneter Auftrag: 	URLAUB - Urlaub    (2007-01-01 - offen)
Unterauftragsnummer: 	uesa00
Gültig ab: 	2007-01-01         
Gültig bis: 	kein Eintrag (offen)         
Bezeichnung: 	Überstundenausgleich
Kurzbezeichnung: Überstundenausgleich
fakturierbar: 	nein
automatisch generieren: ja

(alle anderen Felder, die hier nicht stehen, werden nicht verändert)

Bei der Auftragsnummer muss auf jeden Fall vorn uesa stehen, da in der Datenbankanfrage für timereports ohne Dauer anhand dieses Präfixes die Filterung vorgenommen wird!
Wenn sie geändert wird, bitte die entsprechende Nummer in den GlobalConstants.java Zeile 155 anpassen!


Änderung in TimereportDAO Zeile 454ff: Datenbankanfrage für Liste von Timereports ohne Dauer angepasst, 
so dass Buchungen auf Unteraufträge die mit "uesa" beginnen, nicht selektiert werden. 
(und damit auch nicht in der Warnings-Liste in showWelcome.jsp angezeigt werden)

Änderungen in MatrixHelper.java: Zeile 136ff: Wenn der Timereport zu einem Überstundenausgleich gehört und keine Taskdescritption gespeichert wurde, 
setze Taskdeskription auf "Überstundenausgleich"
Änderungen in showMatrix.jsp: Zeile 390: Zusätzliche If-Abfrage, ob Suborder Überstundenabbau ist, wenn ja ob in der Taskdescription
etwas steht (um den Tag mit der Buchung von den anderen Zellen in der Zeile, die ebenfalls alle 0.0 als Dauer haben, unterscheiden zu können).
Markierung der Zelle mit einem X, damit man die Buchung in der Übersicht sehen kann.

Änderungen in StoreDailyRecordAction: Wenn man den Auftrag Urlaub selektiert, wird automatisch die DailyWorkingTime als Dauer vorselektiert.
Da man dies aber im Unterauftrag Überstundenausgleich nicht möchte, wird bei der entsprechenden Refresh-Task auf diesen UNterauftrag geprüft 
und ggf die Voreinstellung resettet.  


Tests:
eingeloggt mit sql, verschiedene Buchungen ohne Zeitangabe auf verschiedene Aufträge. Zwei Buchungen auf Überstundenausgleich, beide ohne Zeitangabe, eine mit Kommentar, eine ohne. 
Diejenigen die auf Überstundenausgleich gebucht wurden, wurden in der Übersicht (showWelcome.jsp)
nicht als Warnung ausgegeben, alle anderen schon.
In der Matrixübersicht wird sowohl für Überstundenausgleich mit als auch ohne Kommentar ein "X" in die entsprechende Zelle gesetzt. Bei dem ohne Kommentar
wird beim Mouseover "Überstundenausgleich" als Kommentar angezeigt (benötigt zum Selektieren bei der Anzeige).

Anmerkungen: 
- Man kann auf den Unterauftrag Überstundenausgleich nun nicht mehr mit Dauer buchen, da die Dropdown-Menüs für die Dauer ausgegraut (disabled) sind,
wenn der eingestellte Unterauftrag der Überstundenausgleich ist.
- Die Lösung zur Voreinstellung beim Buchen (siehe oben) ist suboptimal, da bei jeder Buchung immer für diesen einen Unterauftrag geprüft wird.
	allerdings ist mir keine optimale generische Lösung eingefallen. 
- wenn man auf einen Tag mehrfach Überstundenausgleich bucht (ob mit oder ohne Dauer), werden im Mouseover, ebenso wie bei anderen
	Mehrfachbuchungen auf einen Auftrag am selben Tag, die Kommentare direkt hintereinander geschrieben, in diesem Fall ggf. mehrfach "Überstundenausgleich".
	
 ----------------------------------------------------------------------------------------------------------
 
 Änderung Überstundenberechnung:
 
 Änderungen an der Überstundenberechnung: Wird jetzt nicht mehr bei jedem Aufruf der Übersichts- und der Einzelübersichtsseite über die gesamte DB 
berechnet. Statt dessen wird bei jeder Abnahme (Acceptance) der Überstundenwert von Contractbeginn bis Abnahmedatum berechnet und im 
Employeecontract gespeichert. Bei jedem Aufruf der Einzelübersicht oder der Übersicht wird dann dieser Wert addiert zu einem dynamisch berechneten 
(von acceptancedate bis aktuellem Datum).

1. Änderung am DB-Modell: 
-	Einfügen einer neuen Double-Variable für die Überstunden bis zum letzten reportAcceptanceDate. 
-	Speicherort: im Table Employeecontract, da die Überstunden für einen Employeecontract berechnet werden und dort auch das Datum der letzten 
Abnahme gespeichert ist (reportAcceptanceDate). Zusätzlicher Vorteil: Es muss keine neue query geschrieben werden, um an die Variable ranzukommen, 
da der Employeecontract ja sowieso für diverse Seiten geladen wird.
-	Name: overtimeStatic (vs. dynamic die andere Hälfte)
- Einfügen einer neuen Boolean-Variable useOvertimeOld im Employeecontract, setzen auf True für alle bestehenden Employeecontracts; 
default-Wert in StoreEmployeecontract auf False bei Erstellung eines neuen Employeecontracts


2.	Zeitpunkt der Berechnung von overtimeStatic:
-	Bei jeder Acceptance (Abnahme) durch Teamleiter neu berechnen und abspeichern (showReleaseAction)
-	Wenn der admin eine Abnahme rückgängig macht (reopen, aber nur wenn das neue Datum vor der letzten Abnahme liegt!), wird der statische Wert 
neu berechnet (mit Ende -> vom admin neu gesetztes Abnahmedatum) (showReleaseAction)
-	Wenn der admin einen timereport ändert, der in einem bereits abgenommenen und nicht neu geöffneten Zeitraum liegt, wird neu berechnet und 
gespeichert. (StoreDailyReportAction, UpdateDailyReportAction) 

3.	Berechnung von overtimeStatic:
-	Verwendung der bisherigen Berechnung mit Modifikation (über TimereportHelper): (DailyReportAction, LoginEmployeeAction - alle anderen Actions bei 
denen Überstunden berechnet werden greifen auf DailyReportAction.refreshVacationAndOvertime zurück)
o	Berechne alle Überstunden bis zum Release/Acceptancedate (gespeichert im Employeecontract)
o	Speichere Wert in Variable overtimeStatic in der DB ab (Speichern des Employeecontracts verwenden, ggf. neue Funktion mit query in OvertimeDAO 
schreiben)
- Beim Speichern von overtimeStatic setze useOvertimeOld auf False, falls es vorher True war (Sinn: Nach Release muss die alte Berechnung bis zur 
nächsten Abnahme weiter verwendet werden; bei erster Abnahme nach Release wird die Variable auf False gesetzt und danach nie wieder geändert; 
bei allen neu erstellten employeecontracts wird die Variable default-mäßig auf False gesetzt.

4.	Berechnung der Überstundenangabe:
-	an allen Stellen, an denen bisher Überstunden gesamt/Monat berechnet werden
a.	Gesamt
o	hole overtimeStatic und reportAcceptanceDate aus der DB
o	wenn employeecontract.useOvertimeOld==false, berechne overtimeDynamic: Überstunden von AcceptanceDate+1 (damit der Acceptance-Tag nicht doppelt eingerechnet wird)  bis heute
o	addiere overtimeStatic und overtimeDynamic
o	wenn employeecontract.useOvertimeOld==true verwende bisherige Berechnung über die gesamte Contractdauer.
b.	Monat
o	bleibt wie gehabt


Tests:
- Speichern von overtimeStatic mit verschiedenen Usern (PV, admin) und verschiedenen Abnahme-Daten sowie reopen und speichern eines timereports im 
geschlossenen Zeitraum im Debug-Modus
  getestet und mit den zu erwartendenen Werten aufgrund der vorhandenen Timereports abgeglichen.
- Änderung der Berechnung zunächst nur in LoginEmployeeAction. Vergleich der Ergebnisse der Berechnung mit der bisherigen Variante in DailyReportAction.
- Debugging: Verfolgen der Variablenwerte während der Berechnungen, Abgleich mit zu erwartenden Werten aufgrund der vorhandenen timereports.

-------------------------------------------------------------------------------------------------------------------------------------------------

Änderungen Überstundenanzeige zu (End-)Datum:

Einzelübersicht: Checkbox für Anzeige der Überstunden zu eingestelltem Datum (bzw. Enddatum bei Zeitraum) eingebaut.
Wenn Checkbox angeklickt ist, werden unten bei den Überstunden zusätzlich die Überstunden bis zum eingestellten (End-)Datum angezeigt.

Änderungen:

showDailyReport.jsp: Checkbox im oberen Bereich eingebaut

showDailyReportAction: im Bereich, wo alle Abfragen zu "refresh timereports" abgearbeitet werden:
	ll. 340-389 Berechnung der Überstunden von Contractbeginn bis enddate der reportForm

showDailyReportForm: neue Variable Boolean showOvertimeUntil mit Getter und Setter

info2.jsp: Anzeige der Überstunden zu (End-)Datum eingebaut



Tests:
- als sql eingeloggt:
	- An- und Ausmachen der Checkbox in
		- Tagesansicht (verschiedene Tage)
		- Monatsansicht (verschiedene Monate)
		- Zeitraum (verschiedene Zeiträume)
		-> Überprüfen der Plausibilität der Anzeige durch Debugging und anhand der vorhandenen Timereports
	- Anlassen der Checkbox, wechseln der Zeitansichten.

----------------------------------------------------------------------------------------------------------------

Änderung Urlaubsüberbuchung verhindern:

Änderungen in StoreDailyReportAction:
	ll 516-552: Einfügen der Überprüfung, ob Buchung Urlaub ist. 
	Wenn ja, überprüfen, ob Buchung Budget überschreitet (mit Hilfe von vacationViewer).
		Wenn ja, setze in der Session Attribut "vacationBudgetOverrun" auf True und beende die Action mit Weiterleitung auf showDailyReport.jsp
		Wenn nein, setze ---------------------"--------------------------- false und speichere Buchung wie gehabt.

Änderungen in UpdateDailyReportAction:
	ll 133-165: Einfügen der Überprüfung, ob Buchung Urlaub ist. 
	Wenn ja, überprüfen, ob Buchung Budget überschreitet (mit Hilfe von vacationViewer).
		Wenn ja, setze in der Session Attribut "vacationBudgetOverrun" auf True und beende die Action mit Weiterleitung auf showDailyReport.jsp
		Wenn nein, setze ---------------------"--------------------------- false und speichere Buchung wie gehabt.

Änderungen in showDailyReport.jsp:
	ll 495-501: wenn das Session-Attribut "vacationBudgetOverrun" True ist, füge nach der Trennlinie (bzw. nach den Buttons für neue Buchung und Druckansicht)
	eine große, dicke, rote Nachricht ein, dass die Buchung das Budget überschreitet und deshalb nicht gebucht wurde.

Änderungen in ShowDailyReportAction:
	l 116: um zu verhindern, dass nach einer Buchung, die das Urlaubsbudget überschreiben würde, die ganze Zeit in der showDailyReport.jsp
	die o.g. Warnung angezeigt wird, setze beim Neuladen (über ShowDailyReportAction) den Wert des Session-Attributs "vacationBudgetOverrun" auf False.

Tests:
	eingeloggt mit sql (normaler User/als Teamleiter für test&test2 zugeordnet).
	
	Überprüfen der Änderungen in StoreDailyReportAction: (wird aufgerufen wann immer eine Buchung im "addDailyReport.jsp" gespeichert wird)
		Überbuchen des Urlaubsbudgets über "Neue Buchung" (sowohl über Menü als auch über den Button in der Einzelübersicht aufgerufen):
		Serienbuchung und Einzelbuchung reagieren korrekt, d.h. Buchung(en) werden nicht gespeichert, statt dessen wird showDailyReport.jsp
		mit der Warnung angezeigt. Auch wenn man über Speichern&Neu speichern wollte, wird nicht die addDailyReport-Seite geladen, sondern
		die showDailyReport.jsp mit der Warnung.
		Buchungen, die das Urlaubsbudget nicht überschreiten, werden wie bisher abgespeichert.
	Überprüfen der Änderungen in UpdateDailyReport (wird aufgerufen, wenn in der Einzelübersicht auf den Speichern-Button für einen timereport gedrückt wird):
		Wenn mit der Änderung der Dauer das Budget überschritten wird, wird die Änderung nicht gespeichert und beim refreshen der showDailyReport.jsp
		die Warnung angezeigt. Wird das Budget nicht überschritten, wird die Änderung wie gehabt gespeichert.
	Überprüfen der Änderungen in ShowDailyReportAction:
		Wenn die Seite showDailyReport.jsp über diese Action aufgerufen wird, wird keine Warnung angezeigt. Wenn vorher eine Warnung angezeigt wurde
		und die Seite nochmals neu geladen oder aufgerufen wird, wird die Warnung nicht mehr angezeigt.
	
	------------------------------------------------------------------------------------------------------
	
	Änderungen Matrixübersicht:
	
	Bei mehreren Buchungen auf denselben Suborder am selben Tag werden die Kommentare der Buchungen nun durch einen Zeilenumbruch getrennt.
	
	Der Tag in der Kopfzeile der Matrixübersicht ist nun ein Link auf die Einzelübersicht dieses Tages.